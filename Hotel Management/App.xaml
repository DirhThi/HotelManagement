<Application x:Class="Hotel_Management.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Hotel_Management"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <ResourceDictionary>

            <Style x:Key="mainButton" TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="#00bbf9"/>
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Background" Value="#00bbf9"/>
            </Style>
            <Style x:Key="secondButton" TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="4"/>
                <Setter Property="BorderBrush" Value="#00bbf9"/>
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Background" Value="Azure"/>
            </Style>
            
            <!-- Start: Pop-up Button Style -->
            <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="#161d36"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    CornerRadius="3"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#0077b6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PopupButtonChoosedStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#0096c7"/>
                <Setter Property="BorderBrush" Value="#0096c7"/>
                <Setter Property="BorderThickness" Value="5,0,0,0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    CornerRadius="3"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#0096c7"/>
                                    <Setter Property="BorderThickness" Value="5,0,0,0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- End: Pop-up Button Style -->

            <!-- Start: iToggleButton Style -->
            <Style x:Key="iToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Viewbox Height="20" Width="20" Margin="0 6 0 0" Stretch="UniformToFill">
                                    <Canvas Height="512" Width="512">
                                        <Path Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="#161d36" Margin="0 0 0 0"/>
                                        <Path Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="#161d36" Margin="0 20 0 0"/>
                                        <Path Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="#161d36" Margin="0 40 0 0"/>
                                    </Canvas>
                                </Viewbox>
                            </Border>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background"
                                        TargetName="border"
                                        Value="Transparent"/>
                                    <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="#FFFFFF"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background"
                                        TargetName="border"
                                        Value="Transparent"/>
                                    <Setter Property="BorderBrush"
                                        TargetName="border"
                                       Value="#FFFFFF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- End: iToggleButton Style -->
            <!--Popup-->
            <Style  x:Key="PopupStyle" TargetType="{x:Type Popup}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:02" From="0" To="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <Trigger Property="FrameworkElement.Visibility" Value="Collapsed">
                        <Setter Property="FrameworkElement.Opacity" Value="0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="tabbarExplore" TargetType="TabItem">
                <Setter Property="Foreground" Value="#161d36"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border  Cursor="Hand" Margin="5 0" CornerRadius="10" Height="40" Name="Border">
                                <ContentPresenter Cursor="Hand"  x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="0,0">
                                </ContentPresenter>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#C0C9E8" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#161d36"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#f2e9e4" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2"/>

                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#161d36"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="playlistButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>

                <Setter Property="Foreground" Value="#22223B"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="22"/>

                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="25">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Effect"  >
                            <Setter.Value>
                                <DropShadowEffect Color="#89C4E1" BlurRadius="3" ShadowDepth="3" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Tag" Value="Visible"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
